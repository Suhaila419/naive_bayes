# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14HUlAfJsuxhNl8iQX89-mDmiVs1GZTqe
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

df = pd.read_csv('/content/spam - spam.csv')
df

df.head()

df.tail()

df.shape

df.info()

len(df[df['Category']=='ham']) # not spam

len(df[df['Category']=='spam'])

df.groupby('Category').describe()

df['Spam']=df['Category'].apply(lambda x: 1 if x=='spam' else 0)
df.head()

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(df.Message,df.Spam,test_size=0.8)

y_train

from sklearn.feature_extraction.text import CountVectorizer
v = CountVectorizer()
X_train_counts = v.fit_transform(X_train.values)
X_train_counts.toarray()[0].shape

X_train_counts

from sklearn.naive_bayes import MultinomialNB
model = MultinomialNB()
model.fit(X_train_counts,y_train)

emails = [
      'Hey Mohamed, can we get together to watch football game tomorrow?',
      'Upto 20% discount on parking, exclusive offer just for you. Dont miss this reward!'
]

emails_count = v.transform(emails)
model.predict(emails_count)

X_test_count = v.transform(X_test)
model.score(X_test_count, y_test)

y_pred = model.predict(X_test_count)

from sklearn.metrics import confusion_matrix , classification_report

print(classification_report(y_test,y_pred))

con = confusion_matrix(y_test,y_pred)
sns.heatmap(con,annot=True,fmt='d',cmap='Blues')

import pickle

# Save to a file
with open('naive_bayes_model.pkl', 'wb') as file:
    pickle.dump(model, file)

